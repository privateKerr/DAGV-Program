proc float Addition(float $nums[])
{
    float $sum = $nums[0]; 

    for ($i = 1; $i < size($nums); $i++){
        $sum += $nums[$i];

    }
    return $sum;
}

print ("Add: " + Addition({1, 2, 3, 4, 5}) + "\n");

proc float Subtract(float $nums[])
{
    float $difference = $nums[0];
    for ($i = 1; $i < size($nums); $i++){
        $difference -= $nums[$i];
    }
    return $difference;
}

print ("Subtract: " + Subtract({1, 2, 3, 4, 5}) + "\n");

proc float Multiply(float $nums[])
{
    float $product = $nums[0];
    for ($i = 1; $i < size($nums); $i++){
        $product *= $nums[$i];
    }
    return $product;
}

print ("Multiply: " + Multiply({1, 2, 3, 4, 5}) + "\n");

proc float Divide(float $nums[])
{
    float $quotient = $nums[0];
    for ($i = 1; $i < size($nums); $i++){
        $quotient /= $nums[$i];
    }
    return $quotient;
}

proc float MultiplyPower(float $nums, int $exponent)
{
    float $result = pow($nums, $exponent);
    return $result;
}

print ("Power Result: " + MultiplyPower(5, 2) + "\n");

proc float CalculateMean(float $nums[])
{
    float $mean = 0;
    for ($i = 0; $i < size($nums); $i++){
        $mean += $nums[$i];
    }

    $mean /= size($nums);
    return $mean;
}

print ("The mean is " + CalculateMean({1, 2, 3, 4, 5}) + "\n");

float inputArray[] = {34, 56, 12, 90, 43, 200};

proc float Median(float $nums[])
{
    //Sorts the array
    for ($i = 0; $i < size($nums) - 1; $i++)
    {
        for ($j = 0; $j < size($nums) - $j - 1; $j++)
        {
            if ($nums[$j] > $nums[$j + 1])
            {
                // Swap the numbers
                $temp = $nums[$j];
                $nums[$j] = $nums[$j + 1];
                $nums[$j + 1] = $temp;
            }
        }
    }

    //Calculates the median
    if (size($nums) % 2 == 0) //Checks if the size of the array is even
    {
        int $midIndex = size($nums) / 2;
        float $median = ($nums[$midIndex - 1] + $nums[$midIndex]) / 2;
        return $median;
    }
    else
    {
        int $midIndex = (size($nums) - 1) / 2; //Checks if the size of the array is odd
        float $median = $nums[$midIndex];
        return $median;
    }
}

print ("The median is " + Median({1, 2, 3, 4, 5, 6, 7}) + "\n");